openapi: 3.0.3
info:
    title: Property-App
    description: Property App using expressjs and mysql.
    version: 1.0.0
servers:
  - url: /



components:
  schemas:
    Property:
      type: object
      required:
        - property_name
        - property_location
        - property_price
        - property_type
        - property_purpose
        - availability
        - geometry
        - user_id
      properties:
        property_id:
            type: string
            description: The auto-generated id of the property
        property_name:
            type: string
            description: The property name
        property_location:
            type: string
            description: The location of the property
        property_price:
            type: number
            description: The price of the property
        property_image:
            type: string
            description: The image of the property
        property_type:
            type: string
            description: The type of property
        property_purpose:
            type: string
            description: The purpose of the property
        availability:
            type: boolean
            description: To state whether the property is available or not
        geometry:
            type: object
            properties: 
              type:
                  type: string
                  required: true
              coordinates:
                  type: array 
                  required: true
      example:
        property_id: 4c0c951d-2a19-471d-b14c-905c46ba4c2a
        property_name: not west
        property_location: Nakuru
        property_price: 36000
        property_image: https://storage.googleapis.com/zillow/image.jpg
        property_type: Rent
        property_purpose: For sale
        availability: true
        geometry:
          type: Point
          coordinates: [-1.2596287275828395,36.80073481345355]
        user_id: a8939bf2-6662-4ba7-b038-b79216c41c81

    User:
      type: object
      required:
        - email
        - password
      properties:
        user_id:
            type: string
            description: The auto-generated id of the user
        username:
            type: string
            description: The username of the user
        email:
            type: string
            description: The email of the user
        role:
            type: string
            description: The role of the user can be admin or user
        password: 
            type: string
            description: The password of the user
      example:
        user_id: a8939bf2-6662-4ba7-b038-b79216c41c81
        username: john
        email: john@gmail.com
        role: ADMIN
        password: password

tags:
  name: User Authentication
  description: User Authentication APIs
  name: Property
  description: Property APIs for client side
  name: Admin Property
  description: Property APIs for admin

paths:
  /properties:
    get:
      summary: Returns the list of all the properties
      tags: [Property]
      responses:
          200:
            description: OK
            content:
              application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'            
          404:
            description: Not found
          500:
            description: Internal server error  

  /properties/bedrooms:
    get:
      summary: Property types featuring 1,2,3 Bedrooms
      tags: [Property]
      responses:
          200:
            description: OK
            content:
              application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'
          404: 
            description: Properties not found
          500:
            description: Internal server error        
  /properties/singlerooms:
    get:
      summary: Property types featuring single rooms
      tags: [Property]
      responses:
          200:
            description: OK
            content:
              application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'
          404: 
            description: Properties not found
          500:
            description: Internal server error   

  /properties/studioapartments:
    get:
      summary: Property types featuring studio apartments
      tags: [Property]
      responses:
          200:
            description: OK
            content:
              application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'
          404: 
            description: Properties not found
          500:
            description: Internal server error         

  /properties/showproperty/{property_id}:
    get:
      summary: Show a single property based on the property id
      tags: [Property]
      parameters:
        - in: path
          name: property id
          schema:
            type: string
          required: true
          description: The property id
      responses:
          200:
            description: OK
            content:
              application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'
          404: 
            description: Not found   

  /properties/search-property:
    get:
      summary: Search property by name,location,purpose,type
      tags: [Property]
      parameters:
        - in: query
          name: searchproperty
          type: string
          description: The search query
      responses:
          200:
            description: OK
            content:
              application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'
          400:
            description: Missing required fields in the form            
          404: 
            description: No properties found matching your search
          500:
            description: Internal server error   

  /admin:
    get:
      summary: Get all properties in admin dashboard
      tags: [Admin Property]
      responses:
          200:
            description: OK
            content:
              application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property' 
          500:
            description: Internal server error  

  /admin/studioaprtments:
    get:
      summary: Get all properties in admin dashboard
      tags: [Admin Property]
      responses:
          200:
            description: OK
            content:
              application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property' 
          404:
            description: Properties not found            
          500:
            description: Internal server error   

  /admin/singlerooms:
    get:
      summary: Get all properties in admin dashboard
      tags: [Admin Property]
      responses:
          200:
            description: OK
            content:
              application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property' 
          404:
            description: Properties not found                
          500:
            description: Internal server error  

  /admin/bedrooms:
    get:
      summary: Get all properties in admin dashboard
      tags: [Admin Property]
      responses:
          200:
            description: OK
            content:
              application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'
          404:
            description: Properties not found                 
          500:
            description: Internal server error 

  /admin/addproperty:          
    post:
      summary: Add property
      tags: [Admin Property]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                property_name:
                  type: string
                property_location:
                  type: string
                property_price:
                  type: string
                property_price:
                  type: string
                property_image:
                  type: string
                  format: binary
                property_type:
                  type: string
                property_purpose:
                  type: string
                longitude:
                  type: string
                latitude:
                  type: string      
              required: 
                - property_name
                - property_location
                - property_price
                - property_image
                - property_type
                - property_purpose
                - longitude
                - latitude
      responses:
          201:
            description: OK
            content:
              application/json:
                schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
          400:
            description: Missing required fields in the form  
          400:
            description: Property already exists
          500:
            description: Error during file upload           

  /admin/search-property:
    get:
      summary: Search property by name,location,purpose,type in admin dashboard
      tags: [Admin Property]
      parameters:
        - in: query
          name: search
          type: string
          description: The search query
      responses:
          200:
            description: OK
            content:
              application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'
          400:
            description: Missing required fields in the form            
          404: 
            description: No properties found matching your search
          500:
            description: Internal server error

  /admin/editproperty/{propery_id}:
    put:
      summary: Edit property
      tags: [Admin Property]
      parameters:
        - in: path
          name: property_id
          schema:
            type: string
          required: true
          description: The id of the property
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                property_name:
                  type: string
                property_location:
                  type: string
                property_price:
                  type: string
                property_price:
                  type: string
                property_image:
                  type: string
                  format: binary
                property_type:
                  type: string
                property_purpose:
                  type: string
                longitude:
                  type: string
                latitude:
                  type: string      
              required: 
                - property_name
                - property_location
                - property_price
                - property_image
                - property_type
                - property_purpose
                - longitude
                - latitude    

  /admin/deleteproperty/{property_id}:
    delete:
      summary: Delete property
      tags: [Admin Property]          
      parameters:
        - in: path
          name: property_id
          schema:
            type: string
          required: true
          description: The id of the property  
      responses:
          200: 
            description: OK
          500:
            description: Internal server error  

  /auth/admin/login:
    post:
      summary: Admin login
      tags: [User Authentication]



  /auth/admin/signup:
    post:
      summary: Admin Sign Up
      tags: [User Authentication] 

  /logout:
    get:
      summary: Logout Admin
      tags: [User Authentication]
      responses:
          201:
            description: OK
          500:
            description: Internal server error  
  